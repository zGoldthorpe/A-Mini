; Division 
;
; Given N >= 0 and M > 0, the program spits out
; q = N / M (integer division)
; r = N % M
; so that q * M + r = N and 0 <= r < M
; (division is done explicitly)

@main:
    read %N
    read %M
    %neg = %N < 0
    branch %neg ? @invalid : @check_M

@check_M:
    %neg = %M <= 0
    branch %neg ? @invalid : @check_trivial

@check_trivial:
    ; given the nature of the algorithm, 1 leads to an infinite loop
    %one = %M == 1
    branch %one ? @trivial : @begin

@trivial:
    write %N ; N / 1
    write 0  ; N % 1
    exit

@begin:
    %q = 0
    %r = %N

@main_loop:
    %done = %r < %M
    %msd = %M
    %msv = 1
    branch %done ? @done : @shave

@shave:
    %scaled = %msd * %M
    %overshoot = %r < %scaled
    branch %overshoot ? @save : @continue

@save:
    %q = %q + %msv
    %prod = %msv * %M
    %r = %r - %prod
    goto @main_loop

@continue:
    %msd = %scaled
    %msv = %msv * %M
    goto @shave

@done:
    write %q
    write %r
    exit

@invalid:
    write -1
    exit
